# Specify your own password for Grafana UI here
adminPassword: automate-all-the-things

# This should allow backstage to embed Grafana dashboards in an iframe but I couldn't make it work
grafana.ini:
  allow_embedding: true
  cookie_samesite: none
  
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2' 
  hosts: []
  
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://kube-prometheus-stack-prometheus:9090 # Name of the k8s service and it's port
      # url: http://prometheus-server # We used this in the Hardcore Edition. Name of the k8s service and it's port. In this case port is 80 which is default
      access: proxy
      isDefault: true
    - name: Loki
      type: loki
      url: http://loki-stack:3100 # Name of the k8s service and it's port
      access: proxy
    # - name: Jaeger
    #   type: jaeger
    #   url: http://jaeger-query:80 # Name of the k8s service and it's port
    #   access: proxy

dashboardProviders:
   dashboardproviders.yaml:
     apiVersion: 1
     providers:
     - name: 'default'
       orgId: 1
       folder: ''
       type: file
       disableDeletion: false
       editable: true
       options:
         path: /var/lib/grafana/dashboards/default

dashboards: 
# Some are commented because if you want to set too many default dashboard you get this error:
# ConfigMap "grafana-dashboards-default" is invalid: []: Too long: must have at most 1048576 bytes
  default:
    # Our custom dashboards
    alertmanager-overview:
      file: dashboards/alertmanager-overview.json
    # apiserver:
    #   file: dashboards/apiserver.json
    # cluster-total:
    #   file: dashboards/cluster-total.json
    # controller-manager:
    #   file: dashboards/controller-manager.json
    # etcd:
    #   file: dashboards/etcd.json
    flagger-canary-status:
      file: dashboards/flagger-canary-status.json
    # grafana-overview:
    #   file: dashboards/grafana-overview.json
    istio:
      file: dashboards/istio.json
    # k8s-coredns:
    #   file: dashboards/k8s-coredns.json
    # k8s-resources-cluster:
    #   file: dashboards/k8s-resources-cluster.json
    # k8s-resources-multicluster:
    #   file: dashboards/k8s-resources-multicluster.json
    # k8s-resources-namespace:
    #   file: dashboards/k8s-resources-namespace.json
    # k8s-resources-node:
    #   file: dashboards/k8s-resources-node.json
    # k8s-resources-pod:
    #   file: dashboards/k8s-resources-pod.json
    # k8s-resources-workload:
    #   file: dashboards/k8s-resources-workload.json
    # k8s-resources-workloads-namespace:
    #   file: dashboards/k8s-resources-workloads-namespace.json
    # kubelet:
    #   file: dashboards/kubelet.json
    # namespace-by-pod:
    #   file: dashboards/namespace-by-pod.json
    # namespace-by-workload:
    #   file: dashboards/namespace-by-workload.json
    # node-cluster-rsrc-use:
    #   file: dashboards/node-cluster-rsrc-use.json
    # node-rsrc-use:
    #   file: dashboards/node-rsrc-use.json
    # nodes:
    #   file: dashboards/nodes.json
    # nodes-darwin:
    #   file: dashboards/nodes-darwin.json
    # persistent-volumes-usage:
    #   file: dashboards/persistent-volumes-usage.json
    # pod-total:
    #   file: dashboards/pod-total.json
    # prometheus:
    #   file: dashboards/prometheus.json
    # proxy:
    #   file: dashboards/proxy.json
    # scheduler:
    #   file: dashboards/scheduler.json
    # workload-total:
    #   file: dashboards/workload-total.json
      
    # Dashboards from grafana.com  
    kubernetesViewsGlobal: # https://grafana.com/grafana/dashboards/15757-kubernetes-views-global/
      gnetId: 15757
      revision: 30
    kubernetesViewsNodes: # https://grafana.com/grafana/dashboards/15759-kubernetes-views-nodes/
      gnetId: 15759
      revision: 19
    kubernetesSystemAPIServer: # https://grafana.com/grafana/dashboards/15761-kubernetes-system-api-server/
      gnetId: 15761
      revision: 13
    kubernetesSystemCoreDNS: # https://grafana.com/grafana/dashboards/15762-kubernetes-system-coredns/
      gnetId: 15762
      revision: 13
    kubernetesViewsNamespaces: # https://grafana.com/grafana/dashboards/15758-kubernetes-views-namespaces/
      gnetId: 15758
      revision: 24
    kubernetesViewsPods: # https://grafana.com/grafana/dashboards/15760-kubernetes-views-pods/
      gnetId: 15760
      revision: 20
    nodeExporterFull: # https://grafana.com/grafana/dashboards/1860-node-exporter-full/
      gnetId: 1860
      revision: 31
