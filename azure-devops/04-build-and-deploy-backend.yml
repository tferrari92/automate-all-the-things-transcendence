name: build-and-deploy-backend

trigger:
  branches:
    include:
      - main  
  paths:
    include:
      - my-app/backend/*

variables:
  - name: APP_NAME
    value: AATT_APP_NAME # This value was modified by the initial-setup python script
  - name: USER_EMAIL
    value: AATT_USER_EMAIL # This value was modified by the initial-setup python script

    
pool:
  vmImage: 'ubuntu-latest' 
  # If you are using a self-hosted agent, comment out the previous line and uncomment the following three
  # name: <agent-pool-name> # Insert here the name of the agent pool you created
  # demands:
  #   - agent.name -equals <agent-name> # Insert here the name of the agent you created

stages:
- stage: BuildApp
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    steps:
    - task: DockerInstaller@0
      displayName: Install Docker
      inputs:
        dockerVersion: '17.09.0-ce'

    - task: Docker@2
      displayName: Build And Push Image
      inputs:
        containerRegistry: 'harbor'
        repository: '$(APP_NAME)/backend'
        command: 'buildAndPush'
        Dockerfile: 'my-app/backend/Dockerfile'



- stage: DeployDev
  condition: succeeded()
  jobs:
  - job: DeployDevJob
    steps:

    # In this case it's necessary to specify the checkout with the persistCredential options set to true. This will enable us to push the changes to the repo.
    - checkout: self
      persistCredentials: true

    # We update the local repo with a pull just in case there have been any recent modifications
    - script: |
        git pull origin main
      displayName: Update repo

    - script: |
        sed 's/tag:.*/tag: $(Build.BuildId)/g' helm/my-app/backend/environments/values-dev.yaml > helm/my-app/backend/environments/values-dev.temp
        mv helm/my-app/backend/environments/values-dev.temp helm/my-app/backend/environments/values-dev.yaml
      displayName: Update Tag In values-dev.yaml

    - script: |
        git config --global user.email "AzureDevOps@Build&DeployAppPipeline.com"
        git config --global user.name "Azure DevOps - Build & Deploy App Pipeline"
        git checkout -b main
        git add helm/my-app/backend/environments/values-dev.yaml 
        git commit -m "App version tag updated to $(Build.BuildId) by Azure DevOps"
        git push --set-upstream origin main
      displayName: 'Push changes to GitHub'
        



- stage: DeployStage
  condition: succeeded()
  # dependsOn: DeployDev
  jobs:
  - job: DeployStageJob
    steps:

    # In this case it's necessary to specify the checkout with the persistCredential options set to true. This will enable us to push the changes to the repo.
    - checkout: self
      persistCredentials: true
      #clean: true
  
    # Every time the pipeline performs a "checkout" step it will checkout the same commit, so we need this step to pull for the changes commited in the previous stage   
    - script: |
        git pull origin main
      displayName: Update repo
      
    - script: |
        sed 's/tag:.*/tag: $(Build.BuildId)/g' helm/my-app/backend/environments/values-stage.yaml > helm/my-app/backend/environments/values-stage.temp
        mv helm/my-app/backend/environments/values-stage.temp helm/my-app/backend/environments/values-stage.yaml
      displayName: Update Tag In values-stage.yaml

    - script: |
        git config --global user.email "AzureDevOps@Build&DeployAppPipeline.com"
        git config --global user.name "Azure DevOps - Build & Deploy App Pipeline"
        git checkout -b main
        git add helm/my-app/backend/environments/values-stage.yaml 
        git commit -m "App version tag updated to $(Build.BuildId) by Azure DevOps"
        git push --set-upstream origin main
      displayName: 'Push changes to GitHub'
 
        



- stage: DeployProd
  condition: succeeded()
  # dependsOn: DeployStage
  jobs:
  - job: ApproveRelease
    timeoutInMinutes: 4320 # Job times out in 3 days
    pool: server
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # Task times out in 1 day
      inputs:
        notifyUsers: '$(USER_EMAIL)'
        instructions: 'Please validate and approve deployment to prod.'

  - job: DeployProdJob
    dependsOn: ApproveRelease
    steps:

    # In this case it's necessary to specify the checkout with the persistCredential options set to true. This will enable us to push the changes to the repo.
    - checkout: self
      persistCredentials: true
      #clean: true
      
    # Every time the pipeline performs a "checkout" step it will checkout the same commit, so we need this step to pull for the changes commited in the previous stage   
    - script: |
        git pull origin main
      displayName: Update repo

    - script: |
        sed 's/tag:.*/tag: $(Build.BuildId)/g' helm/my-app/backend/environments/values-prod.yaml > helm/my-app/backend/environments/values-prod.temp
        mv helm/my-app/backend/environments/values-prod.temp helm/my-app/backend/environments/values-prod.yaml
      displayName: Update Tag In values-prod.yaml

    - script: |
        git config --global user.email "AzureDevOps@Build&DeployAppPipeline.com"
        git config --global user.name "Azure DevOps - Build & Deploy App Pipeline"
        git checkout -b main
        git add helm/my-app/backend/environments/values-prod.yaml 
        git commit -m "App version tag updated to $(Build.BuildId) by Azure DevOps"
        git push --set-upstream origin main
      displayName: 'Push changes to GitHub'
